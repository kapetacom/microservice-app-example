kind: kapeta://kapeta/block-type-service:1.3.6
metadata:
  name: kapeta/ms-app-example-auth-api
  visibility: private
  description: ""
spec:
  consumers:
    - kind: kapeta://kapeta/resource-type-rest-client:1.1.2
      metadata:
        name: users
      spec:
        port:
          name: rest
          type: rest
        methods:
          Users::login:
            responseType:
              ref: LoginResponse
            method: POST
            path: /users/login
            arguments:
              request:
                ref: LoginRequest
                transport: BODY
                argument: request
                optional: false
            controllerName: Users
          Users::getUser:
            responseType:
              ref: User
            method: GET
            path: /users/{username}
            arguments:
              username:
                type: string
                transport: PATH
                argument: username
                optional: false
            controllerName: Users
          Users::getUsers:
            responseType:
              ref: User[]
            method: GET
            path: /users/
            arguments: {}
            controllerName: Users
        source:
          type: kaplang
          version: 1.11.2
          value: |-
            controller Users("/users") {

            	@GET("/")
            	getUsers():User[]
            	
            	@GET("/{username}")
            	getUser(@Path username:string):User
            	
            	@POST("/login")
            	login(@Body request:LoginRequest):LoginResponse
            }
    - kind: kapeta/resource-type-auth-jwt-consumer:0.0.4
      metadata:
        name: authjwtconsumer
      spec:
        port:
          name: http
          type: http
  providers:
    - kind: kapeta://kapeta/resource-type-rest-api:1.1.2
      metadata:
        name: auth
      spec:
        port:
          name: rest
          type: rest
        methods:
          login:
            responseType:
              ref: LoginResponse
            method: POST
            path: /login
            arguments:
              payload:
                ref: LoginRequest
                transport: BODY
                argument: payload
                optional: false
          getVersion:
            responseType:
              type: string
            method: GET
            path: /version
            arguments: {}
        source:
          type: kaplang
          version: 1.11.2
          value: |-
            @GET('/version')
            getVersion(  ):string

            @POST('/login')
            login( @Body payload:LoginRequest ):LoginResponse
  entities:
    types:
      - type: enum
        name: UserRole
        values:
          - USER
          - ADMIN
      - type: dto
        name: User
        properties:
          username:
            type: string
            secret: false
            required: true
            global: false
          firstname:
            type: string
            secret: false
            required: true
            global: false
          lastname:
            type: string
            secret: false
            required: true
            global: false
          role:
            ref: UserRole
            secret: false
            required: true
            global: false
      - type: dto
        name: LoginRequest
        properties:
          username:
            type: string
            secret: false
            required: true
            global: false
          password:
            type: string
            secret: false
            required: true
            global: false
      - type: dto
        name: LoginResponse
        properties:
          accessToken:
            type: string
            secret: false
            required: true
            global: false
    source:
      type: kaplang
      version: 1.11.3
      value: |-
        enum UserRole {
        	USER,
        	ADMIN
        }


        type User {
        	username: string
        	firstname: string
        	lastname: string
        	role: UserRole
        }


        type LoginRequest {
        	username: string
        	password: string
        }

        type LoginResponse {
        	accessToken:string
        }
  target:
    kind: kapeta://kapeta/language-target-go:0.1.2
    options:
      basePackage: github.com/elgris/microservice-app-example/auth-api
  configuration:
    types:
      - type: dto
        name: JWT
        properties:
          secret:
            type: string
            secret: true
            required: true
            global: false
    source:
      type: kaplang
      version: 1.11.2
      value: |-
        JWT {
            @secret
            secret:string
        }
